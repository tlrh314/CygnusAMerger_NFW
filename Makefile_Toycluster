# This is Toycluster, a code that generates an artificial cluster merger.
# Clusters consist of a DM halo defined by its density profile and a gaseous
# ICM defined by a beta model. Under the assumption of hydrostatic equillibrium
# all other quantities follow. (Donnert 2014, Donnert et al in prep.)

SHELL = /bin/bash

## OPTIONS  ##
OPT     += -DGIVEPARAMS            # more merger parameters in .par file
#OPT     += -DSPH_CUBIC_SPLINE      # for use with Gadget2
#OPT     += -DNFWC_DUFFY08          # alternate fit to concentr. param
OPT     += -DBETA=0.55             # slope between rc and rcut. keep >0.5
OPT     += -DRCUT_R200_RATIO=1.6    # values >1 make cluster unstable, use with care
#OPT     += -DDOUBLE_BETA_COOL_CORES
#OPT     += -DNO_RCUT_IN_T          # set Rcut very large in U calculation

# if neither PARABOLA nor COMET is selected, merge as ball with R_Sample
#OPT     += -DPARABOLA              # merge in a parabula
OPT     += -DCOMET                 # merge like a comet, ball+tail (recommended)

# OPTIONS for substructure

#OPT     += -DSUBSTRUCTURE          # add a population of galaxy-like subhalos
#OPT     += -DSUBHOST=1             # host subhalos in this cluster
#OPT     += -DSLOW_SUBSTRUCTURE     # put subhalos on Hernquist orbits
#OPT     += -DREPORTSUBHALOS        # print info about all subhaloes

#OPT     += -DADD_THIRD_SUBHALO     # manually set the first subhalo mass, pos, vel
#OPT     += -DTHIRD_HALO_ONLY


## Target Computer ##
#ifndef SYSTYPE
#SYSTYPE := $(shell hostname)
#endif

# Edit by TLRH, 2015/12/03
#SYSTYPE="Lisa"
#SYSTYPE="Taurus"

ifndef SYSTYPE
    SYSTYPE := $(shell hostname)
endif

ifeq ($(SYSTYPE),*.lisa.surfsara.nl)
# NB use module load c/intel
CC       = icc
OPTIMIZE = -O2 -Wall
GSL_INCL = $(CPPFLAGS)
GSL_LIBS = $(LDFLAGS)
endif

ifeq (uwp.science.uva.nl, $(findstring uwp.science.uva.nl, $(SYSTYPE)))
CC       = /net/glados2.science.uva.nl/api/thalbes1/prerequisites-10.0/bin/gcc
OPTIMIZE = -O2 -Wall
GSL_INCL = -I/net/glados2.science.uva.nl/api/thalbes1/prerequisites-10.0/include
GSL_LIBS = -L/net/glados2.science.uva.nl/api/thalbes1/prerequisites-10.0/lib  -lgsl -lgslcblas -lm
endif

ifeq ($(SYSTYPE),taurus)
CC       = gcc
OPTIMIZE = -O2 -Wall
GSL_INCL = $(CPPFLAGS)
GSL_LIBS = $(LDFLAGS)
endif

ifeq ($(SYSTYPE),MBP)
CC       = icc
OPTIMIZE = -Wall -O2
GSL_INCL =  -I/usr/local/Cellar/gsl/1.16/include
#GSL_INCL = -I/usr/local/AMUSE/prerequisites-10.0/include
GSL_LIBS =  -L/usr/local/Cellar/gsl/1.16/lib
#GSL_LIBS = -L/usr/local/AMUSE/prerequisites-10.0/lib -lgsl -lgslcblas
endif

ifeq ($(SYSTYPE),DARWIN)
CC       =  icc
OPTIMIZE = -fast -m64 -xhost
GSL_INCL = $(CPPFLAGS)
GSL_LIBS = -L/Users/jdonnert/Dev/lib
endif

ifeq ($(SYSTYPE),MSI)
CC          = icc
OPTIMIZE    = -Wall -g -O3 -xhost
GSL_INCL    =
GSL_LIBS    =
FFTW_LIBS   =
FFTW_INCL   =
endif

ifeq ($(SYSTYPE),mach64.ira.inaf.it)
CC          = gcc
OPTIMIZE    = -O2 -Wall -g  -m64 -march=native -mtune=native -mprefer-avx128 -fopenmp  -minline-all-stringops -fprefetch-loop-arrays --param prefetch-latency=300 -funroll-all-loops
GSL_INCL    = -I/homes/donnert/Libs/include
GSL_LIBS    = -L/homes/donnert/Libs/lib
FFTW_LIBS   =
FFTW_INCL   =
endif

## TARGET ##

EXEC = Toycluster

## FILES ##

SRCDIR    = src/

SRCFILES := ${shell find $(SRCDIR) -name \*.c -print} # all .c files in SRCDIR
OBJFILES = $(SRCFILES:.c=.o)

INCLFILES := ${shell find src -name \*.h -print} # all .h files in SRCDIR
INCLFILES += Makefile

CFLAGS     = -std=c99 -fopenmp $(OPTIMIZE) $(OPT) $(GSL_INCL) $(FFTW_INCL)

LINK    = $(GSL_LIBS) -lm -lgsl -lgslcblas 

## RULES ##

%.o : %.c
	@echo [CC] $@
	@$(CC) $(CFLAGS)  -o $@ -c $<

$(EXEC) : $(OBJFILES)
	@echo SYSTYPE=$(SYSTYPE)
	$(CC) --version
	$(CC) $(CFLAGS) $(OBJFILES) $(LINK) -o $(EXEC)
	@ctags -w $(SRCFILES) $(INCLFILES)

$(OBJFILES) : $(INCLFILES) $(SRCFILES)

clean : 
	rm -f $(OBJFILES) $(EXEC)

help :
	@echo $(SYSTYPE)
	@echo $(CC)
	@echo $(OPTIMIZE)
	@echo $(GSL_INCL)
	@echo $(GSL_LIBS)
